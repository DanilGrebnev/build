{"version":3,"file":"static/js/368.9780ae90.chunk.js","mappings":"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","sources":["app/components/pages/Login/components/LoginButton.tsx","app/components/pages/Login/hooks/useFetchLogin.ts","webpack://ftkm-website/./src/app/components/pages/Login/style.module.scss?6f96","app/components/pages/Login/components/LoginInput.tsx","app/components/pages/Login/components/PasswordInput.tsx","app/components/pages/Login/index.tsx","app/hooks/useIsAuth.ts"],"sourcesContent":["import { LoadingButton } from '@UI/LoadingButton'\r\n\r\nimport { useFetchLogin } from '../hooks/useFetchLogin'\r\n\r\ninterface ILoginButton {\r\n    login: string\r\n    password: string\r\n}\r\n\r\nexport const LoginButton: React.FC<ILoginButton> = ({ login, password }) => {\r\n    const { fetchLogin, isLoading } = useFetchLogin()\r\n\r\n    return (\r\n        <LoadingButton\r\n            onClick={() => fetchLogin({ login, password })}\r\n            loading={isLoading}\r\n            text=\"войти\"\r\n        />\r\n    )\r\n}\r\n","import { API_RESPONSES } from '@API_RESPONSES'\r\nimport { axios } from '@lib/axios'\r\nimport { useState } from 'react'\r\n\r\ntype payload = {\r\n    login: string\r\n    password: string\r\n}\r\n\r\ntype data = {\r\n    data?: { token?: string }\r\n}\r\n\r\nexport const useFetchLogin = () => {\r\n    const [isLoading, setLoading] = useState<boolean>(false)\r\n\r\n    const fetchLogin = async ({ login, password }: payload): Promise<void> => {\r\n        const payload = { login, password }\r\n\r\n        setLoading(true)\r\n\r\n        try {\r\n            const { data }: data = await axios.post('user/login', payload)\r\n\r\n            const token = data?.token\r\n\r\n            if (!token) return\r\n\r\n            localStorage.setItem('token', token)\r\n\r\n            window.location.reload()\r\n        } catch (err) {\r\n            console.log(err)\r\n\r\n            console.log(API_RESPONSES.LOGIN_ERROR)\r\n        } finally {\r\n            setLoading(false)\r\n        }\r\n    }\r\n\r\n    return {\r\n        isLoading,\r\n        fetchLogin,\r\n    }\r\n}\r\n","// extracted by mini-css-extract-plugin\nexport default {\"LoginContainer\":\"style_LoginContainer__Sxpng\",\"InputContainer\":\"style_InputContainer__5Y-Ur\",\"TextField\":\"style_TextField__GrjpH\",\"BtnGroup\":\"style_BtnGroup__-Hvko\",\"btn\":\"style_btn__GLZIT\"};","import { ILoginInput } from '@interfaces/Login'\r\nimport { TextField } from '@mui/material'\r\n\r\nimport s from '../style.module.scss'\r\n\r\nexport const LoginInput: React.FC<ILoginInput> = ({ setValue }) => {\r\n    return (\r\n        <TextField\r\n            onChange={(e: any) => setValue(e.target.value)}\r\n            className={s.TextField}\r\n            label=\"Логин\"\r\n            variant=\"outlined\"\r\n        />\r\n    )\r\n}\r\n","import { ILoginInput } from '@interfaces/Login'\r\nimport { TextField } from '@mui/material'\r\n\r\nimport s from '../style.module.scss'\r\n\r\nexport const PasswordInput: React.FC<ILoginInput> = ({ setValue }) => {\r\n    return (\r\n        <TextField\r\n            onChange={(e: any) => setValue(e.target.value)}\r\n            className={s.TextField}\r\n            id=\"outlined-password-input\"\r\n            label=\"Пароль\"\r\n            type=\"password\"\r\n            autoComplete=\"current-password\"\r\n        />\r\n    )\r\n}\r\n","import { useIsAuth } from '@hooks/useIsAuth'\r\nimport { Button } from '@mui/material'\r\nimport { useState } from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nimport { LoginButton } from './components/LoginButton'\r\nimport { LoginInput } from './components/LoginInput'\r\nimport { PasswordInput } from './components/PasswordInput'\r\nimport s from './style.module.scss'\r\n\r\nconst Login = () => {\r\n    useIsAuth()\r\n\r\n    const [login, setLogin] = useState('')\r\n    const [password, setPassword] = useState('')\r\n\r\n    return (\r\n        <div className={s.LoginContainer}>\r\n            <div className={s.InputContainer}>\r\n                <h1>Система администрирования контента</h1>\r\n\r\n                <LoginInput setValue={setLogin} />\r\n\r\n                <PasswordInput setValue={setPassword} />\r\n\r\n                <div className={s.BtnGroup}>\r\n                    <LoginButton\r\n                        login={login}\r\n                        password={password}\r\n                    />\r\n                    <Link to=\"/\">\r\n                        <Button\r\n                            variant=\"outlined\"\r\n                            className={s.btn}\r\n                        >\r\n                            На главную\r\n                        </Button>\r\n                    </Link>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Login\r\n","import { axios } from '@lib/axios'\r\nimport { useEffect } from 'react'\r\nimport { useNavigate } from 'react-router-dom'\r\n\r\nexport const useIsAuth = () => {\r\n    const navigate = useNavigate()\r\n\r\n    useEffect(() => {\r\n        if (!localStorage.getItem('token')) {\r\n            return\r\n        }\r\n\r\n        axios.get('user/auth').then(res => {\r\n            if (res?.data?.access) {\r\n                navigate('/cms')\r\n            }\r\n        })\r\n    }, [])\r\n}\r\n"],"names":["LoginButton","_ref","login","password","_useFetchLogin","_useState","useState","_useState2","_slicedToArray","isLoading","setLoading","fetchLogin","_ref2","_asyncToGenerator","_regeneratorRuntime","mark","_callee","payload","_yield$axios$post","_data","token","wrap","_context","prev","next","axios","sent","data","abrupt","localStorage","setItem","window","location","reload","t0","console","log","API_RESPONSES","finish","stop","_x","apply","arguments","useFetchLogin","_jsx","LoadingButton","onClick","loading","text","LoginInput","setValue","TextField","onChange","e","target","value","className","s","label","variant","PasswordInput","id","type","autoComplete","navigate","useNavigate","useEffect","getItem","then","res","_res$data","access","useIsAuth","setLogin","_useState3","_useState4","setPassword","children","_jsxs","Link","to","Button"],"sourceRoot":""}